(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{81:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return p})),n.d(t,"default",(function(){return s}));var i=n(3),r=n(7),o=(n(0),n(93)),a={id:"guiding-principles",title:"Guiding principles",slug:"/guiding-principles"},c={unversionedId:"guiding-principles",id:"guiding-principles",isDocsHomePage:!1,title:"Guiding principles",description:"There are several guiding prinicples we follow in this project.",source:"@site/docs/guiding-principles.mdx",slug:"/guiding-principles",permalink:"/CodeshiftCommunity/docs/guiding-principles",editUrl:"https://github.com/CodeshiftCommunity/CodeshiftCommunity/edit/master/website/docs/guiding-principles.mdx",version:"current",sidebar:"docs",previous:{title:"Introduction",permalink:"/CodeshiftCommunity/docs/"},next:{title:"FAQ",permalink:"/CodeshiftCommunity/docs/faq"}},p=[{value:"Target a package &amp; version",id:"target-a-package--version",children:[]},{value:"Everyone should ship codemods",id:"everyone-should-ship-codemods",children:[]},{value:"Codemods help expedite adoption",id:"codemods-help-expedite-adoption",children:[]}],l={toc:p};function s(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(i.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"There are several guiding prinicples we follow in this project."),Object(o.b)("h2",{id:"target-a-package--version"},"Target a package & version"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"APIs are always changing"),Object(o.b)("li",{parentName:"ul"},"Codemods written at a specific point of time aren't always going to work into the future"),Object(o.b)("li",{parentName:"ul"},"So we beleive codemods should support libraries moving from one API to another, and target a specific package and specific version")),Object(o.b)("p",null,"This gives us a lot of benefits,"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"It's obvious the scope and intent of a codemod (migrating a package from one version to another)"),Object(o.b)("li",{parentName:"ol"},"Codemods can be 'playable in a sequence', for example migrating from an older verison of ",Object(o.b)("inlineCode",{parentName:"li"},"@atlaskit/button")," to the latest is possible for example ",Object(o.b)("inlineCode",{parentName:"li"},"v14 -> v15 -> v16"),"."),Object(o.b)("li",{parentName:"ol"},"TODO`")),Object(o.b)("h2",{id:"everyone-should-ship-codemods"},"Everyone should ship codemods"),Object(o.b)("p",null,'Codemods aren\'t complicated, anyone who has writtin anything in jQuery should be able to write a codemod with relative ease.\nWe want to remove the stigma that "codemods are hard" or "they take a long time to write" and get everyone into the healthy practice of writing them to make dependeny management within the javascript ecosystem easier.'),Object(o.b)("h2",{id:"codemods-help-expedite-adoption"},"Codemods help expedite adoption"),Object(o.b)("p",null,"Reading and understanding changelogs is often confusing and painful. We aim to expedite adoption through automation."))}s.isMDXComponent=!0},93:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return b}));var i=n(0),r=n.n(i);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),s=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},d=function(e){var t=s(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,a=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),d=s(n),m=i,b=d["".concat(a,".").concat(m)]||d[m]||u[m]||o;return n?r.a.createElement(b,c(c({ref:t},l),{},{components:n})):r.a.createElement(b,c({ref:t},l))}));function b(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=m;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:i,a[1]=c;for(var l=2;l<o;l++)a[l]=n[l];return r.a.createElement.apply(null,a)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);