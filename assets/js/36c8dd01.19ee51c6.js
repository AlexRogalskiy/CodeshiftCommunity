(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{79:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return a})),t.d(n,"metadata",(function(){return c})),t.d(n,"toc",(function(){return l})),t.d(n,"default",(function(){return s}));var o=t(3),r=t(7),i=(t(0),t(95)),a={id:"consuming",title:"Consuming",slug:"/consuming"},c={unversionedId:"consuming",id:"consuming",isDocsHomePage:!1,title:"Consuming",description:"Consuming codemods is simple,",source:"@site/docs/consuming.mdx",slug:"/consuming",permalink:"/CodeshiftCommunity/docs/consuming",editUrl:"https://github.com/CodeshiftCommunity/CodeshiftCommunity/edit/master/website/docs/consuming.mdx",version:"current",sidebar:"docs",previous:{title:"Authoring",permalink:"/CodeshiftCommunity/docs/authoring"},next:{title:"Testing",permalink:"/CodeshiftCommunity/docs/testing"}},l=[{value:"Via command line",id:"via-command-line",children:[]},{value:"Consuming local codemods",id:"consuming-local-codemods",children:[]},{value:"Parsing TypeScript, Babel and more",id:"parsing-typescript-babel-and-more",children:[]}],u={toc:l};function s(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(o.a)({},u,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Consuming codemods is simple,"),Object(i.b)("h2",{id:"via-command-line"},"Via command line"),Object(i.b)("p",null,"Most often you would want to run a single codemod, our CLI is all you need to do that."),Object(i.b)("p",null,"To make sure you're always on the latest version of the Codeshift cli, we recommend you use ",Object(i.b)("inlineCode",{parentName:"p"},"npx"),". (You can also install it globally with ",Object(i.b)("inlineCode",{parentName:"p"},"npm install -g @codemod/cli"),")"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"npx @codemod/cli -package @atlaskit/button@14.0.0 project/path/to/src")),Object(i.b)("p",null,"The cli tool will then:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Attempt to fetch codemods for the ",Object(i.b)("inlineCode",{parentName:"li"},"@atlaskit/button")," package."),Object(i.b)("li",{parentName:"ul"},"Look for a codemod targetting version ",Object(i.b)("inlineCode",{parentName:"li"},"14.0.0")),Object(i.b)("li",{parentName:"ul"},"Parse and transform all source files matching the provided path")),Object(i.b)("h2",{id:"consuming-local-codemods"},"Consuming local codemods"),Object(i.b)("p",null,"For codemods not published to the community repo, you can supply your own transform"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"npx @codemod/cli -transform path/to/transform.ts project/path/to/src")),Object(i.b)("h2",{id:"parsing-typescript-babel-and-more"},"Parsing TypeScript, Babel and more"),Object(i.b)("p",null,"TODO"))}s.isMDXComponent=!0},95:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return b}));var o=t(0),r=t.n(o);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var u=r.a.createContext({}),s=function(e){var n=r.a.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},p=function(e){var n=s(e.components);return r.a.createElement(u.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},d=r.a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,a=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=s(t),d=o,b=p["".concat(a,".").concat(d)]||p[d]||m[d]||i;return t?r.a.createElement(b,c(c({ref:n},u),{},{components:t})):r.a.createElement(b,c({ref:n},u))}));function b(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=d;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var u=2;u<i;u++)a[u]=t[u];return r.a.createElement.apply(null,a)}return r.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"}}]);