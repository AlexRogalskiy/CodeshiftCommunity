(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{87:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return d})),n.d(t,"default",(function(){return u}));var r=n(3),o=n(7),i=(n(0),n(95)),a={id:"introduction",title:"Introduction",slug:"/"},c={unversionedId:"introduction",id:"introduction",isDocsHomePage:!1,title:"Introduction",description:"Codeshift Community is a community-owned global registry and documentation hub for codemods. Think DefinitelyTyped for codemods.",source:"@site/docs/introduction.mdx",slug:"/",permalink:"/CodeshiftCommunity/docs/",editUrl:"https://github.com/CodeshiftCommunity/CodeshiftCommunity/edit/master/website/docs/introduction.mdx",version:"current",sidebar:"docs",next:{title:"Guiding principles",permalink:"/CodeshiftCommunity/docs/guiding-principles"}},d=[{value:"The problem",id:"the-problem",children:[]},{value:"The solution",id:"the-solution",children:[]},{value:"Getting started",id:"getting-started",children:[]}],s={toc:d};function u(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Codeshift Community is a community-owned global registry and documentation hub for codemods. ",Object(i.b)("em",{parentName:"p"},"Think ",Object(i.b)("a",{parentName:"em",href:"https://github.com/DefinitelyTyped/DefinitelyTyped"},"DefinitelyTyped")," for codemods."),"\nThis project provides library users & maintainers with facilities to help ",Object(i.b)("a",{parentName:"p",href:"authoring"},"write"),", ",Object(i.b)("a",{parentName:"p",href:"testing"},"test"),", ",Object(i.b)("a",{parentName:"p",href:"contribution"},"publish")," and ",Object(i.b)("a",{parentName:"p",href:"docs/consuming"},"consume")," codemods in a structured, standardized and familiar way."),Object(i.b)("h2",{id:"the-problem"},"The problem"),Object(i.b)("p",null,"A lot popular of libraries in the ecosystem like React, Material Design and Nextjs, all provide their own codemods, CLI and distrobution services, but these services are usually quite hidden from the average user. What if there was a centralised registry, similar to ",Object(i.b)("a",{parentName:"p",href:"https://github.com/DefinitelyTyped/DefinitelyTyped"},"DefinitelyTyped"),"? Libraries would be able to consolidate codemods and users have a single place to go to look for codemods?"),Object(i.b)("h2",{id:"the-solution"},"The solution"),Object(i.b)("p",null,'Our goal is to build a community around codemods to help normalize both authoring and consuming them and make it a standard development practice throughout the javascript ecosystem. In doing so, we hope to also demystify codemods, which are often seen as "arcane knowledge" and generally too hard to warrant learning and writing. We beleive this can be achieved with the right support, documentation and tooling.'),Object(i.b)("h2",{id:"getting-started"},"Getting started"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"consuming"},"Consuming codemods")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"authoring"},"Writing codemods")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"testing"},"Testing codemods")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"your-first-codemod"},"Learning resources")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"contribution"},"Publishing & contribution"))))}u.isMDXComponent=!0},95:function(e,t,n){"use strict";n.d(t,"a",(function(){return l})),n.d(t,"b",(function(){return b}));var r=n(0),o=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=o.a.createContext({}),u=function(e){var t=o.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},l=function(e){var t=u(e.components);return o.a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},m=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,a=e.parentName,s=d(e,["components","mdxType","originalType","parentName"]),l=u(n),m=r,b=l["".concat(a,".").concat(m)]||l[m]||p[m]||i;return n?o.a.createElement(b,c(c({ref:t},s),{},{components:n})):o.a.createElement(b,c({ref:t},s))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=m;var c={};for(var d in t)hasOwnProperty.call(t,d)&&(c[d]=t[d]);c.originalType=e,c.mdxType="string"==typeof e?e:r,a[1]=c;for(var s=2;s<i;s++)a[s]=n[s];return o.a.createElement.apply(null,a)}return o.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);