(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{65:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"metadata",(function(){return o})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return p}));var i=n(3),r=n(7),l=(n(0),n(98)),a={id:"cli",title:"codeshift/cli",slug:"/cli"},o={unversionedId:"api/cli",id:"api/cli",isDocsHomePage:!1,title:"codeshift/cli",description:"To download and run codemods, we provide a CLI tool called @codeshift/cli.",source:"@site/docs/api/codeshift-cli.mdx",slug:"/cli",permalink:"/docs/cli",editUrl:"https://github.com/CodeshiftCommunity/CodeshiftCommunity/edit/main/website/docs/api/codeshift-cli.mdx",version:"current",sidebar:"api",next:{title:"codeshift/utils",permalink:"/docs/utils"}},c=[{value:"Usage/Installation",id:"usageinstallation",children:[]},{value:"Options",id:"options",children:[{value:"--transform, -t",id:"--transform--t",children:[]},{value:"--packages",id:"--packages",children:[]},{value:"--parser, -p",id:"--parser--p",children:[]},{value:"--extensions, -e",id:"--extensions--e",children:[]},{value:"--ignore-pattern",id:"--ignore-pattern",children:[]},{value:"--version, -v",id:"--version--v",children:[]},{value:"--help",id:"--help",children:[]}]}],s={toc:c};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(l.b)("wrapper",Object(i.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("p",null,"To download and run codemods, we provide a CLI tool called ",Object(l.b)("inlineCode",{parentName:"p"},"@codeshift/cli"),"."),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"@codeshift/cli")," is responsible for running the provided transform against your entire codebase.\nUnder the hood, it is a wrapper of jscodeshift's cli, which provides additional functionality"),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},"Ability to run community codemods hosted on npm"),Object(l.b)("li",{parentName:"ol"},"Runs versioned codemods in sequence"),Object(l.b)("li",{parentName:"ol"},"Always runs the latest version of a codemod")),Object(l.b)("p",null,"The cli allows you to run transforms either from the ",Object(l.b)("a",{parentName:"p",href:"https://github.com/CodeshiftCommunity/CodeshiftCommunity/tree/main/community"},"community folder")," or on your local machine as per the original implementation of jscodeshift"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Note:")," Codemods will be designed to do the heavy lifting, but they'll often not be perfect so some manual work may still be required in order to successfully migrate."),Object(l.b)("h2",{id:"usageinstallation"},"Usage/Installation"),Object(l.b)("p",null,"We recommend running the CLI with ",Object(l.b)("inlineCode",{parentName:"p"},"npx")," to ensure you always have the latest version."),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"$ npx @codeshift/cli --packages mylib@1.0.0 /project/src")),Object(l.b)("p",null,"But it can also be installed normally:"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"npm install -g @codeshift/cli")," or ",Object(l.b)("inlineCode",{parentName:"p"},"yarn global add @codeshift/cli")),Object(l.b)("p",null,"Or globally:"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"npm install --save-dev @codeshift/cli")," or ",Object(l.b)("inlineCode",{parentName:"p"},"yarn add -D @codeshift/cli")),Object(l.b)("h2",{id:"options"},"Options"),Object(l.b)("h3",{id:"--transform--t"},"--transform, -t"),Object(l.b)("p",null,"The transform to run, transforms can be either a single file or directory with an index."),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"example:")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"npx @codeshift/cli --transform codemods/my-special-mod /project/src/file.js")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"npx @codeshift/cli --transform codemods/my-special-mod/index.ts /project/src/file.js"))),Object(l.b)("h3",{id:"--packages"},"--packages"),Object(l.b)("p",null,"Runs transforms for the specified comma separated list of packages, optionally include a version for each package to run all transforms since that version"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"example:")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"npx @codeshift/cli --packages @atlaskit/button /project/src")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"npx @codeshift/cli --packages @atlaskit/button@3.0.0,@atlaskit/range@4.0.0 /project/src"))),Object(l.b)("h3",{id:"--parser--p"},"--parser, -p"),Object(l.b)("p",null,"Parser to use for parsing the source files you are code modding."),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"options:")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"babel (default)"),Object(l.b)("li",{parentName:"ul"},"babylon"),Object(l.b)("li",{parentName:"ul"},"flow"),Object(l.b)("li",{parentName:"ul"},"ts"),Object(l.b)("li",{parentName:"ul"},"tsx")),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"example:")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"npx @codeshift/cli --parser tsx /project/src/file.ts")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"npx @codeshift/cli -p babel /project/src/file.js"))),Object(l.b)("h3",{id:"--extensions--e"},"--extensions, -e"),Object(l.b)("p",null,"Transform files with these file extensions (comma separated list) (default: js)"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"example:")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"npx @codeshift/cli --extensions ts,tsx /project/src/file.js")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"npx @codeshift/cli -e js /project/src/file.js"))),Object(l.b)("h3",{id:"--ignore-pattern"},"--ignore-pattern"),Object(l.b)("p",null,"Ignore files that match a provided glob expression"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"example:")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"@codeshift/cli --ignore-pattern node_modules /project/src/file.js"))),Object(l.b)("h3",{id:"--version--v"},"--version, -v"),Object(l.b)("p",null,"Get current version number"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"example:")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"@codeshift/cli --version")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"@codeshift/cli -v"))),Object(l.b)("h3",{id:"--help"},"--help"),Object(l.b)("p",null,"Print all help text to the command line"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"example:")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"@codeshift/cli --help"))))}p.isMDXComponent=!0},98:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var i=n(0),r=n.n(i);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},l=Object.keys(e);for(i=0;i<l.length;i++)n=l[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(i=0;i<l.length;i++)n=l[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=r.a.createContext({}),p=function(e){var t=r.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},b=function(e){var t=p(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,l=e.originalType,a=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),b=p(n),u=i,m=b["".concat(a,".").concat(u)]||b[u]||d[u]||l;return n?r.a.createElement(m,o(o({ref:t},s),{},{components:n})):r.a.createElement(m,o({ref:t},s))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=n.length,a=new Array(l);a[0]=u;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:i,a[1]=o;for(var s=2;s<l;s++)a[s]=n[s];return r.a.createElement.apply(null,a)}return r.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);