(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{84:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return p})),n.d(t,"default",(function(){return s}));var r=n(3),o=n(7),a=(n(0),n(99)),i={id:"utils",title:"codeshift/utils",slug:"/utils"},c={unversionedId:"api/utils",id:"api/utils",isDocsHomePage:!1,title:"codeshift/utils",description:"CodeshiftCommunity provides a set of utilities to help perform common codemod operations.",source:"@site/docs/api/codeshift-utils.mdx",slug:"/utils",permalink:"/docs/utils",editUrl:"https://github.com/CodeshiftCommunity/CodeshiftCommunity/edit/main/website/docs/api/codeshift-utils.mdx",version:"current",sidebar:"api",previous:{title:"codeshift/cli",permalink:"/docs/cli"},next:{title:"codeshift/test-utils",permalink:"/docs/test-utils"}},p=[{value:"Installation",id:"installation",children:[]},{value:"Imports",id:"imports",children:[{value:"<code>hasImportDeclaration(j, source, importPath)</code>",id:"hasimportdeclarationj-source-importpath",children:[]},{value:"<code>getImportDeclaration(j, source, importPath)</code>",id:"getimportdeclarationj-source-importpath",children:[]},{value:"<code>getDefaultImportSpecifier(j, source, specifier)</code>",id:"getdefaultimportspecifierj-source-specifier",children:[]},{value:"<code>getImportSpecifier(j, source, specifier)</code>",id:"getimportspecifierj-source-specifier",children:[]}]},{value:"JSX",id:"jsx",children:[{value:"<code>getJSXAttributesByName(j, source, attributeName)</code>",id:"getjsxattributesbynamej-source-attributename",children:[]}]},{value:"Comments",id:"comments",children:[{value:"<code>addCommentBefore(j, source, message)</code>",id:"addcommentbeforej-source-message",children:[]}]}],l={toc:p};function s(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"CodeshiftCommunity provides a set of utilities to help perform common codemod operations."),Object(a.b)("h2",{id:"installation"},"Installation"),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"@codeshift/utils")," is pre-bundled with every codemod that is published to the ",Object(a.b)("a",{parentName:"p",href:"https://github.com/CodeshiftCommunity/CodeshiftCommunity/tree/main/community"},"community folder"),",\nso there's no need to install it manually."),Object(a.b)("p",null,"However, it is also available for use outside of this project and compatible with jscodeshift."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"npm install --save-dev @codeshift/utils")," or ",Object(a.b)("inlineCode",{parentName:"p"},"yarn add -D @codeshift/utils")),Object(a.b)("h2",{id:"imports"},"Imports"),Object(a.b)("h3",{id:"hasimportdeclarationj-source-importpath"},Object(a.b)("inlineCode",{parentName:"h3"},"hasImportDeclaration(j, source, importPath)")),Object(a.b)("p",null,"Finds an import declaration by source name"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns")),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"boolean")),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Example")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-jsx"},"// src/App.js\nimport React from 'react';\n")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-js"},"import { hasImportDeclaration } from '@codeshift/utils';\n\nhasImportDeclaration(j, source, 'react'); // True\n")),Object(a.b)("h3",{id:"getimportdeclarationj-source-importpath"},Object(a.b)("inlineCode",{parentName:"h3"},"getImportDeclaration(j, source, importPath)")),Object(a.b)("p",null,"Returns an import declaration by source name"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns")),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"Collection"),": Collection containing 1 or more imports"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Example")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-jsx"},"// src/App.js\nimport React from 'react';\n")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-js"},"import { getImportDeclaration } from '@codeshift/utils';\n\ngetImportDeclaration(j, source, 'react');\n")),Object(a.b)("h3",{id:"getdefaultimportspecifierj-source-specifier"},Object(a.b)("inlineCode",{parentName:"h3"},"getDefaultImportSpecifier(j, source, specifier)")),Object(a.b)("p",null,"Finds a default import specifier by name"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns")),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"Collection"),": Collection containing all matched default import specifiers"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Example")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-jsx"},"// src/App.js\nimport React from 'react';\n")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-js"},"import { getDefaultImportSpecifier } from '@codeshift/utils';\n\ngetDefaultImportSpecifier(j, source, 'React'); // Collection containing 'React'\n")),Object(a.b)("h3",{id:"getimportspecifierj-source-specifier"},Object(a.b)("inlineCode",{parentName:"h3"},"getImportSpecifier(j, source, specifier)")),Object(a.b)("p",null,"Finds an import specifier by name"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns")),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"Collection"),": Collection containing all matched import specifiers"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Example")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-jsx"},"// src/App.js\nimport React, { useEffect } from 'react';\n")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-js"},"import { getImportSpecifier } from '@codeshift/utils';\n\ngetImportSpecifier(j, source, 'useEffect'); // Collection containing 'useEffect'\n")),Object(a.b)("h2",{id:"jsx"},"JSX"),Object(a.b)("h3",{id:"getjsxattributesbynamej-source-attributename"},Object(a.b)("inlineCode",{parentName:"h3"},"getJSXAttributesByName(j, source, attributeName)")),Object(a.b)("p",null,"Finds a JSX attributeName (aka prop) by name"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns")),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"Collection"),": Collection containing all matched jsx attributes"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Example")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-jsx"},"// src/App.js\nimport React from 'react';\n\nconst App = () => <Button primary>Say hello</Button>;\n")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-js"},"import { getJSXAttributesByName } from '@codeshift/utils';\n\ngetJSXAttributesByName(j, source, 'primary'); // Collection containing 'primary'\n")),Object(a.b)("h2",{id:"comments"},"Comments"),Object(a.b)("h3",{id:"addcommentbeforej-source-message"},Object(a.b)("inlineCode",{parentName:"h3"},"addCommentBefore(j, source, message)")),Object(a.b)("p",null,"Appends a comment before the provided node"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns")),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"void")),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Example")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-jsx"},"// src/App.js\nimport React from 'react';\n\nconst App = () => <Button primary>Say hello</Button>;\n")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-js"},"import { addCommentBefore } from '@codeshift/utils';\n\naddCommentBefore(\n  j,\n  path.find(j.ImportDeclaration),\n  'This should be removed in favour of mylib',\n);\n")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-js"},"// src/App.js\n// TODO: (Codemod) This should be removed in favour of mylib\nimport React from 'react';\n\nconst App = () => <Button primary>Say hello</Button>;\n")))}s.isMDXComponent=!0},99:function(e,t,n){"use strict";n.d(t,"a",(function(){return m})),n.d(t,"b",(function(){return d}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=o.a.createContext({}),s=function(e){var t=o.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},m=function(e){var t=s(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},u=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),m=s(n),u=r,d=m["".concat(i,".").concat(u)]||m[u]||b[u]||a;return n?o.a.createElement(d,c(c({ref:t},l),{},{components:n})):o.a.createElement(d,c({ref:t},l))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=u;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var l=2;l<a;l++)i[l]=n[l];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);